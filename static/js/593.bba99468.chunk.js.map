{"version":3,"file":"static/js/593.bba99468.chunk.js","mappings":"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","sources":["pages/Signup.jsx"],"sourcesContent":["import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faGoogle } from '@fortawesome/free-brands-svg-icons';\nimport { Link, useNavigate } from 'react-router-dom';\n\nimport { useEffect, useState } from 'react';\nimport { auth, doesUserExist, addUser } from '../firebase/config';\nimport { createUserWithEmailAndPassword, signInWithPopup, GoogleAuthProvider } from 'firebase/auth';\n\nexport default function Signup() {\n  let [ email, setEmail ] = useState('');\n  let [ password, setPassword ] = useState('');\n  let [ error, setError ] = useState('');\n  let [ userName, setUserName ] = useState('');\n  let [ fullname, setFullname ] = useState('');\n  let navigate = useNavigate();\n  \n  useEffect(()=>{\n    document.title = 'Sign Up -firewit';\n  },[]);\n\n\n  async function handleEmailSignUp(e){\n    e.preventDefault();\n    const usernameExists = await doesUserExist(userName); \n    \n    if(!usernameExists){\n      try{\n        const createUserResult = await createUserWithEmailAndPassword(auth,email,password);\n        const user= createUserResult.user;\n        await addUser(user,userName,fullname,email);\n        navigate('/');\n      }\n      catch(err){\n        setEmail('');\n        setPassword('');\n        setUserName('');\n        console.log(err)\n        setError(err.message);\n      }\n    }\n    else{\n      setError('Username already exists, try another username.')\n      setUserName('');\n    }\n  }\n  async function handleGoogleSignIn(){\n\n    let result = await signInWithPopup(auth, new GoogleAuthProvider());\n    console.log(result)\n    const usernameExists = await doesUserExist(await result.user.displayName); \n    if(!usernameExists){\n      try{\n\n        await addUser(result.user,result.user.displayName,result.user.displayName,result.user.email);\n        navigate('/');\n      }\n      catch(err){\n        console.log(err)\n        setError(err.message);\n      }\n    }\n    navigate('/');\n  }\n  return (\n    <div>\n      <div className=\"h-screen flex flex-col justify-center items-center\">\n        <div className=\"border border-gray-600 w-80 py-8 flex items-center flex-col mb-3 rounded-sm\">\n          <h1 className=\"font-bold text-2xl\">firewit</h1>\n          <form onSubmit={handleEmailSignUp} className=\"mt-8 w-64 flex flex-col\">\n            {error && <p className='text-xs text-red-300 mb-2'>{error}</p>}\n            <input autoFocus\n                   className=\"text-xs w-full mb-2 rounded-sm bg-gray-600 px-2 py-2 focus:outline-none focus:border-gray-400 active:outline-none\"\n                   id=\"email\" placeholder=\"Username\" type=\"text\" value={userName} onChange={e => setUserName(e.target.value)}/>\n            <input autoFocus\n                   className=\"text-xs w-full mb-2 rounded-sm bg-gray-600 px-2 py-2 focus:outline-none focus:border-gray-400 active:outline-none\"\n                   id=\"fullname\" placeholder=\"Full Name\" type=\"text\" value={fullname} onChange={e => setFullname(e.target.value)}/>\n            <input autoFocus\n                   className=\"text-xs w-full mb-2 rounded-sm bg-gray-600 px-2 py-2 focus:outline-none focus:border-gray-400 active:outline-none\"\n                   id=\"email\" placeholder=\"Email\" type=\"text\" value={email} onChange={e => setEmail(e.target.value)}/>\n            <input autoFocus\n                   className=\"text-xs w-full mb-4 rounded-sm  bg-gray-600 px-2 py-2 focus:outline-none focus:border-gray-400 active:outline-none\"\n                   id=\"password\" placeholder=\"Password\" type=\"password\"  value={password} onChange={e => setPassword(e.target.value)}/>\n            <button className=\"text-xs w-full text-center bg-blue-400 text-white rounded font-semibold px-2 py-2 hover:bg-blue-500\">\n                Sign Up\n            </button>\n            <div className=\"flex justify-evenly space-x-2 w-64 mt-4\">\n            <span className=\"bg-gray-300 h-px flex-grow t-2 relative top-2\"></span>\n            <span className=\"flex-none text-xs text-gray-400 font-semibold\">or</span>\n            <span className=\"bg-gray-300 h-px flex-grow t-2 relative top-2\"></span>\n          </div>\n          <button onClick={handleGoogleSignIn} className=\"text-xs mt-4 w-64 text-center bg-blue-400 text-white rounded font-semibold px-2 py-2 hover:bg-blue-500\">\n            <FontAwesomeIcon icon={faGoogle} />\n            <span className=\"text-xs w-full text-center ml-2\">Log in with Google</span>\n          </button>\n          </form>\n\n          </div>\n          <div className=\"border rounded-sm border-gray-600 text-center w-80 py-4\">\n            <span className=\"text-sm\">Already have an account? </span>\n            <Link to='/login' className=\"text-blue-400 text-sm font-semibold\">Log in</Link>\n          </div>\n      </div>  \n    </div>\n  )\n}\n\n"],"names":["Signup","useState","email","setEmail","password","setPassword","error","setError","userName","setUserName","fullname","setFullname","navigate","useNavigate","e","preventDefault","doesUserExist","createUserWithEmailAndPassword","auth","createUserResult","user","addUser","console","log","message","signInWithPopup","GoogleAuthProvider","result","displayName","useEffect","document","title","className","onSubmit","autoFocus","id","placeholder","type","value","onChange","target","onClick","icon","faGoogle","to"],"sourceRoot":""}